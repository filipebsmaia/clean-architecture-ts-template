version: '3'

services:
  database:
    container_name: database
    image: 'postgres:alpine'
    ports:
      - '5432:5432'
    volumes:
      - 'postgresql_data:/var/lib/postgresql'
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=docker
      - POSTGRES_DB=ca-template
    networks:
      - net

  zookeeper:
    container_name: zookeeper
    image: 'confluentinc/cp-zookeeper'
    ports:
      - '2181:2181'
    volumes:
      - 'zookeeper_data:/bitnami'
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - net

  kafka:
    container_name: kafka
    image: 'confluentinc/cp-kafka'
    ports:
      - '9092:9092'
    volumes:
      - 'kafka_data:/bitnami'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
    networks:
      - net

  app:
    container_name: app
    restart: always
    build:
      context: ./
      dockerfile: Dockerfile.dev
    ports:
      - '3000:3000'
    volumes:
      - './:/home/node/app'
      - '/home/node/app/node_modules'
    environment:
      - PORT=3000
      - DATABASE_URL="postgresql://postgres:docker@database:5432/ca-template?schema=public"
      - KAFKA_BROKERS=kafka:9092
    networks:
      - net
    depends_on:
      - database
      - kafka
      - zookeeper

networks:
  net:
    driver: bridge

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgresql_data:
    driver: local